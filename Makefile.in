CXX = @CXX@
CXXFLAGS = @CXXFLAGS@ @DJVULIBRE_CFLAGS@ @POPPLER_CFLAGS@ @GRAPHICSMAGICK_CFLAGS@
LDFLAGS = @LDFLAGS@
LDLIBS = @LIBS@ @DJVULIBRE_LIBS@ @POPPLER_LIBS@ @GRAPHICSMAGICK_LIBS@

INSTALL = @INSTALL@
WINDRES = @WINDRES@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@

.PHONY: all
all: pdf2djvu

ifneq ($(WINDRES),:)
version.o: version.rc version.hh
	$(WINDRES) -c 1252 -o $(@) $(<)
pdf2djvu: version.o
endif

config.o: config.cc config.hh string-format.hh sexpr.hh debug.hh djvuconst.hh version.hh
debug.o: debug.cc debug.hh
pdf-backend.o: pdf-backend.cc pdf-backend.hh debug.hh system.hh version.hh
sexpr.o: sexpr.cc sexpr.hh
string-format.o: string-format.cc string-format.hh
system.o: system.cc system.hh debug.hh version.hh
quantizer.o: quantizer.cc quantizer.hh pdf-backend.hh config.hh string-format.hh sexpr.hh version.hh
pdf2djvu.o: pdf2djvu.cc pdf-backend.hh debug.hh config.hh string-format.hh system.hh version.hh djvuconst.hh sexpr.hh quantizer.hh
pdf2djvu: pdf2djvu.o pdf-backend.o debug.o config.o string-format.o system.o sexpr.o quantizer.o
	$(LINK.cc) $(^) $(LDFLAGS) $(LDLIBS) -o $(@) 

.PHONY: clean
clean:
	$(RM) pdf2djvu *.o

.PHONY: distclean
distclean: clean
	$(RM) version.hh Makefile config.status config.log

.PHONY: test
test: pdf2djvu
	$(MAKE) -C tests/

.PHONY: install
install:
	$(INSTALL) -d $(DESTDIR)$(bindir)
	$(INSTALL) pdf2djvu $(DESTDIR)$(bindir)

# vim:ts=4 sw=4 noet
